{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","map","transactionB","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","transactionz","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ae680c0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transactions) => transactions.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  transactions: [],\n};\n\n//Create Context\nexport const GlobalContext = createContext(initialState);\n\n//Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  //able to access the action through other components. Add actions to provider\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transactionB) => transactionB.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transactionB) => transactionB.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${income}</p>\n      </div>\n      <div>\n        <h4>Expenses</h4>\n        <p className=\"money minus\">-${expense}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transactionz }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transactionz.amount < 0 ? \"-\" : \"+\";\n  return (\n    <li className={transactionz.amount < 0 ? \"minus\" : \"plus\"}>\n      {transactionz.text}\n      <span>\n        {/* Math.abs = makes it into an absolute number which will make it positive*/}\n        {sign} ${Math.abs(transactionz.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transactionz.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  // instead of doing context.transactions\n  // distructuring {transactions}\n\n  return (\n    <>\n      <h3>History</h3>\n      {\n        //hello\n      }\n      <ul className=\"list\">\n        {transactions.map((transactionz) => (\n          <Transaction key={transactionz.id} transactionz={transactionz} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { React, useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n  const submitTrans = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000000),\n      text,\n      /* Adding a plus sign to amount because it return as a string. Adding the plus sign will return it as a number*/\n      amount: +amount,\n    };\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add New Transaction</h3>\n      <form onSubmit={submitTrans}>\n        <div className=\"form-control\">\n          <label htmlFor=\"Text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text....\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount\n            <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\"> Add Transaction</button>\n      </form>\n    </>\n  );\n};\n","import \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}